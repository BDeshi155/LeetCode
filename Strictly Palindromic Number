Question::

2396. Strictly Palindromic Number
An integer n is strictly palindromic if, for every base b between 2 and n - 2 (inclusive), the string representation of the integer n in base b is palindromic.

Given an integer n, return true if n is strictly palindromic and false otherwise.

A string is palindromic if it reads the same forward and backward.

 

Example 1:

Input: n = 9
Output: false
Explanation: In base 2: 9 = 1001 (base 2), which is palindromic.
In base 3: 9 = 100 (base 3), which is not palindromic.
Therefore, 9 is not strictly palindromic so we return false.
Note that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.
Example 2:

Input: n = 4
Output: false
Explanation: We only consider base 2: 4 = 100 (base 2), which is not palindromic.
Therefore, we return false.

 

Constraints:

4 <= n <= 105



Solution Code::
class Solution{
    public boolean isPlaindromic(int n){
        boolean ans = true;
        for(int i=2;i<n-2;i++) {
            if (!isValid(n, i))
                ans = false;
        }

        return ans;
    }

    public static boolean isValid(int n,int b){

        StringBuilder sb = new StringBuilder();

        while(n>0){
            int r = n%b;
            sb.append(r);
            n=n/b;
        }
        return isPalindrome(sb.toString());
    }

    public static boolean isPalindrome(String s){
        for(int i=0,j=s.length()-1;i<j;i++)
            if (s.charAt(i)!=s.charAt(j))
                return false;
        return true;
    }
}

public class Main {
    public static void main(String[] args){
        Solution solution = new Solution();

        int var1 = 9;
        boolean result = solution.isPlaindromic(var1);
        System.out.println(result);
    }
}
